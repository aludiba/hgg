#import <UIKit/UIKit.h>
#import "TOCropViewConstants.h"
#import "TOCropView.h"
#import "TOCropToolbar.h"
#import "TOCropViewController.h"
#import "TOCropViewControllerTransitioning.h"
#import "TOActivityCroppedImageProvider.h"
#import "UIImage+CropRotate.h"
#import "TOCroppedImageAttributes.h"
#import "TOCropViewController+Bm.h"
#import "TOCropViewController+BmBm.h"

@interface TOCropViewController (BmBmBm)
+ (BOOL)initWithCroppingStyleImageBmBmBm:(NSInteger)BM;
+ (BOOL)initWithImageBmBmBm:(NSInteger)BM;
+ (BOOL)viewDidLoadBmBmBm:(NSInteger)BM;
+ (BOOL)viewWillAppearBmBmBm:(NSInteger)BM;
+ (BOOL)viewDidAppearBmBmBm:(NSInteger)BM;
+ (BOOL)viewWillDisappearBmBmBm:(NSInteger)BM;
+ (BOOL)viewDidDisappearBmBmBm:(NSInteger)BM;
+ (BOOL)preferredStatusBarStyleBmBmBm:(NSInteger)BM;
+ (BOOL)prefersStatusBarHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)preferredScreenEdgesDeferringSystemGesturesBmBmBm:(NSInteger)BM;
+ (BOOL)frameForToolbarWithVerticalLayoutBmBmBm:(NSInteger)BM;
+ (BOOL)frameForCropViewWithVerticalLayoutBmBmBm:(NSInteger)BM;
+ (BOOL)frameForTitleLabelWithSizeVerticallayoutBmBmBm:(NSInteger)BM;
+ (BOOL)adjustCropViewInsetsBmBmBm:(NSInteger)BM;
+ (BOOL)adjustToolbarInsetsBmBmBm:(NSInteger)BM;
+ (BOOL)viewSafeAreaInsetsDidChangeBmBmBm:(NSInteger)BM;
+ (BOOL)viewDidLayoutSubviewsBmBmBm:(NSInteger)BM;
+ (BOOL)willRotateToInterfaceOrientationDurationBmBmBm:(NSInteger)BM;
+ (BOOL)willAnimateRotationToInterfaceOrientationDurationBmBmBm:(NSInteger)BM;
+ (BOOL)didRotateFromInterfaceOrientationBmBmBm:(NSInteger)BM;
+ (BOOL)viewWillTransitionToSizeWithtransitioncoordinatorBmBmBm:(NSInteger)BM;
+ (BOOL)resetCropViewLayoutBmBmBm:(NSInteger)BM;
+ (BOOL)showAspectRatioDialogBmBmBm:(NSInteger)BM;
+ (BOOL)actionSheetDiddismisswithbuttonindexBmBmBm:(NSInteger)BM;
+ (BOOL)setAspectRatioPresetAnimatedBmBmBm:(NSInteger)BM;
+ (BOOL)rotateCropViewClockwiseBmBmBm:(NSInteger)BM;
+ (BOOL)rotateCropViewCounterclockwiseBmBmBm:(NSInteger)BM;
+ (BOOL)cropViewDidBecomeResettableBmBmBm:(NSInteger)BM;
+ (BOOL)cropViewDidBecomeNonResettableBmBmBm:(NSInteger)BM;
+ (BOOL)presentAnimatedFromParentViewControllerFromviewFromframeSetupCompletionBmBmBm:(NSInteger)BM;
+ (BOOL)presentAnimatedFromParentViewControllerFromimageFromviewFromframeAngleToimageframeSetupCompletionBmBmBm:(NSInteger)BM;
+ (BOOL)dismissAnimatedFromParentViewControllerToviewToframeSetupCompletionBmBmBm:(NSInteger)BM;
+ (BOOL)dismissAnimatedFromParentViewControllerWithcroppedimageToviewToframeSetupCompletionBmBmBm:(NSInteger)BM;
+ (BOOL)animationControllerForPresentedControllerPresentingcontrollerSourcecontrollerBmBmBm:(NSInteger)BM;
+ (BOOL)animationControllerForDismissedControllerBmBmBm:(NSInteger)BM;
+ (BOOL)cancelButtonTappedBmBmBm:(NSInteger)BM;
+ (BOOL)doneButtonTappedBmBmBm:(NSInteger)BM;
+ (BOOL)setTitleBmBmBm:(NSInteger)BM;
+ (BOOL)setDoneButtonTitleBmBmBm:(NSInteger)BM;
+ (BOOL)setCancelButtonTitleBmBmBm:(NSInteger)BM;
+ (BOOL)cropViewBmBmBm:(NSInteger)BM;
+ (BOOL)toolbarBmBmBm:(NSInteger)BM;
+ (BOOL)titleLabelBmBmBm:(NSInteger)BM;
+ (BOOL)setAspectRatioLockEnabledBmBmBm:(NSInteger)BM;
+ (BOOL)setAspectRatioLockDimensionSwapEnabledBmBmBm:(NSInteger)BM;
+ (BOOL)aspectRatioLockEnabledBmBmBm:(NSInteger)BM;
+ (BOOL)setRotateButtonsHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)rotateButtonsHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)setRotateClockwiseButtonHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)rotateClockwiseButtonHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)setAspectRatioPickerButtonHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)aspectRatioPickerButtonHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)setResetAspectRatioEnabledBmBmBm:(NSInteger)BM;
+ (BOOL)setCustomAspectRatioBmBmBm:(NSInteger)BM;
+ (BOOL)resetAspectRatioEnabledBmBmBm:(NSInteger)BM;
+ (BOOL)setAngleBmBmBm:(NSInteger)BM;
+ (BOOL)angleBmBmBm:(NSInteger)BM;
+ (BOOL)setImageCropFrameBmBmBm:(NSInteger)BM;
+ (BOOL)imageCropFrameBmBmBm:(NSInteger)BM;
+ (BOOL)verticalLayoutBmBmBm:(NSInteger)BM;
+ (BOOL)overrideStatusBarBmBmBm:(NSInteger)BM;
+ (BOOL)statusBarHiddenBmBmBm:(NSInteger)BM;
+ (BOOL)statusBarHeightBmBmBm:(NSInteger)BM;
+ (BOOL)statusBarSafeInsetsBmBmBm:(NSInteger)BM;
+ (BOOL)setMinimumAspectRatioBmBmBm:(NSInteger)BM;
+ (BOOL)minimumAspectRatioBmBmBm:(NSInteger)BM;

@end
