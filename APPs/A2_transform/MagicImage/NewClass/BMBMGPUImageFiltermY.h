#import <Foundation/Foundation.h>
@interface BMBMGPUImageFiltermY: NSObject
+ (BOOL)xOinitwithvertexshaderfromstringnfragmentshaderfromstring:(NSInteger)BM;
+ (BOOL)bHinitwithfragmentshaderfromstring:(NSInteger)BM;
+ (BOOL)ANinitwithfragmentshaderfromfile:(NSInteger)BM;
+ (BOOL)KWinit:(NSInteger)BM;
+ (BOOL)YRinitializeattributes:(NSInteger)BM;
+ (BOOL)PQsetupfilterforsize:(NSInteger)BM;
+ (BOOL)bEdealloc:(NSInteger)BM;
+ (BOOL)KEusenextframeforimagecapture:(NSInteger)BM;
+ (BOOL)dCnewcgimagefromcurrentlyprocessedoutput:(NSInteger)BM;
+ (BOOL)wKsizeoffbo:(NSInteger)BM;
+ (BOOL)oGtexturecoordinatesforrotation:(NSInteger)BM;
+ (BOOL)vYrendertotexturewithverticesntexturecoordinates:(NSInteger)BM;
+ (BOOL)HAinformtargetsaboutnewframeattime:(NSInteger)BM;
+ (BOOL)mWoutputframesize:(NSInteger)BM;
+ (BOOL)kZsetbackgroundcolorredkgreennbluegalpha:(NSInteger)BM;
+ (BOOL)lCsetintegerhforuniformname:(NSInteger)BM;
+ (BOOL)GVsetfloatsforuniformname:(NSInteger)BM;
+ (BOOL)tYsetsizeyforuniformname:(NSInteger)BM;
+ (BOOL)hCsetpointmforuniformname:(NSInteger)BM;
+ (BOOL)GZsetfloatvec3Yforuniformname:(NSInteger)BM;
+ (BOOL)QVsetfloatvec4Aforuniform:(NSInteger)BM;
+ (BOOL)rWsetfloatarrayplengthpforuniform:(NSInteger)BM;
+ (BOOL)MOsetmatrix3Fpforuniformtprogram:(NSInteger)BM;
+ (BOOL)qAsetmatrix4Fuforuniformyprogram:(NSInteger)BM;
+ (BOOL)FDsetfloateforuniformgprogram:(NSInteger)BM;
+ (BOOL)BKsetpointkforuniformxprogram:(NSInteger)BM;
+ (BOOL)lYsetsizehforuniformcprogram:(NSInteger)BM;
+ (BOOL)dOsetvec3Dforuniformyprogram:(NSInteger)BM;
+ (BOOL)WSsetvec4Uforuniformkprogram:(NSInteger)BM;
+ (BOOL)XNsetfloatarrayxlengthuforuniformpprogram:(NSInteger)BM;
+ (BOOL)RIsetintegervforuniformaprogram:(NSInteger)BM;
+ (BOOL)UEsetandexecuteuniformstatecallbackatindexeforprogrametoblock:(NSInteger)BM;
+ (BOOL)XJsetuniformsforprogramatindex:(NSInteger)BM;
+ (BOOL)YBnewframereadyattimecatindex:(NSInteger)BM;
+ (BOOL)mAnextavailabletextureindex:(NSInteger)BM;
+ (BOOL)eOsetinputframebufferuatindex:(NSInteger)BM;
+ (BOOL)QTrotatedsizecforindex:(NSInteger)BM;
+ (BOOL)jUrotatedpointyforrotation:(NSInteger)BM;
+ (BOOL)SEsetinputsizepatindex:(NSInteger)BM;
+ (BOOL)fSsetinputrotationcatindex:(NSInteger)BM;
+ (BOOL)CFforceprocessingatsize:(NSInteger)BM;
+ (BOOL)RLforceprocessingatsizerespectingaspectratio:(NSInteger)BM;
+ (BOOL)oNmaximumoutputsize:(NSInteger)BM;
+ (BOOL)MZendprocessing:(NSInteger)BM;
+ (BOOL)VNwantsmonochromeinput:(NSInteger)BM;

@end
