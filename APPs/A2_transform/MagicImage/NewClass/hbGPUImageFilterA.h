#import <Foundation/Foundation.h>
@interface hbGPUImageFilterA: NSObject
+ (BOOL)EInitwithvertexshaderfromstringCFragmentshaderfromstring:(NSInteger)hb;
+ (BOOL)dInitwithfragmentshaderfromstring:(NSInteger)hb;
+ (BOOL)WInitwithfragmentshaderfromfile:(NSInteger)hb;
+ (BOOL)qinit:(NSInteger)hb;
+ (BOOL)oinitializeAttributes:(NSInteger)hb;
+ (BOOL)fSetupfilterforsize:(NSInteger)hb;
+ (BOOL)pdealloc:(NSInteger)hb;
+ (BOOL)guseNextFrameForImageCapture:(NSInteger)hb;
+ (BOOL)gnewCGImageFromCurrentlyProcessedOutput:(NSInteger)hb;
+ (BOOL)NsizeOfFBO:(NSInteger)hb;
+ (BOOL)rTexturecoordinatesforrotation:(NSInteger)hb;
+ (BOOL)IRendertotexturewithverticestTexturecoordinates:(NSInteger)hb;
+ (BOOL)GInformtargetsaboutnewframeattime:(NSInteger)hb;
+ (BOOL)SoutputFrameSize:(NSInteger)hb;
+ (BOOL)GSetbackgroundcolorredSGreenqBlueQAlpha:(NSInteger)hb;
+ (BOOL)jSetintegerBForuniformname:(NSInteger)hb;
+ (BOOL)LSetfloatWForuniformname:(NSInteger)hb;
+ (BOOL)DSetsizedForuniformname:(NSInteger)hb;
+ (BOOL)ASetpointzForuniformname:(NSInteger)hb;
+ (BOOL)QSetfloatvec3FForuniformname:(NSInteger)hb;
+ (BOOL)USetfloatvec4fForuniform:(NSInteger)hb;
+ (BOOL)BSetfloatarraybLengthwForuniform:(NSInteger)hb;
+ (BOOL)aSetmatrix3FiForuniformBProgram:(NSInteger)hb;
+ (BOOL)kSetmatrix4FwForuniformkProgram:(NSInteger)hb;
+ (BOOL)lSetfloatJForuniformXProgram:(NSInteger)hb;
+ (BOOL)cSetpointBForuniformFProgram:(NSInteger)hb;
+ (BOOL)GSetsizezForuniformQProgram:(NSInteger)hb;
+ (BOOL)MSetvec3ZForuniformuProgram:(NSInteger)hb;
+ (BOOL)USetvec4YForuniformgProgram:(NSInteger)hb;
+ (BOOL)tSetfloatarrayfLengthyForuniformTProgram:(NSInteger)hb;
+ (BOOL)vSetintegersForuniformJProgram:(NSInteger)hb;
+ (BOOL)WSetandexecuteuniformstatecallbackatindexTForprogramhToblock:(NSInteger)hb;
+ (BOOL)hSetuniformsforprogramatindex:(NSInteger)hb;
+ (BOOL)ENewframereadyattimeaAtindex:(NSInteger)hb;
+ (BOOL)NnextAvailableTextureIndex:(NSInteger)hb;
+ (BOOL)PSetinputframebufferbAtindex:(NSInteger)hb;
+ (BOOL)uRotatedsizeuForindex:(NSInteger)hb;
+ (BOOL)ORotatedpointtForrotation:(NSInteger)hb;
+ (BOOL)ISetinputsizeaAtindex:(NSInteger)hb;
+ (BOOL)BSetinputrotationTAtindex:(NSInteger)hb;
+ (BOOL)pForceprocessingatsize:(NSInteger)hb;
+ (BOOL)PForceprocessingatsizerespectingaspectratio:(NSInteger)hb;
+ (BOOL)umaximumOutputSize:(NSInteger)hb;
+ (BOOL)hendProcessing:(NSInteger)hb;
+ (BOOL)LwantsMonochromeInput:(NSInteger)hb;

@end
