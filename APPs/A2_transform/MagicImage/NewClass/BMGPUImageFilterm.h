#import <Foundation/Foundation.h>
@interface BMGPUImageFilterm: NSObject
+ (BOOL)JInitwithvertexshaderfromstringfragmentshaderfromstringbm:(NSInteger)BM;
+ (BOOL)PInitwithfragmentshaderfromstringbm:(NSInteger)BM;
+ (BOOL)LInitwithfragmentshaderfromfilebm:(NSInteger)BM;
+ (BOOL)FInitbm:(NSInteger)BM;
+ (BOOL)HInitializeattributesbm:(NSInteger)BM;
+ (BOOL)LSetupfilterforsizebm:(NSInteger)BM;
+ (BOOL)PDeallocbm:(NSInteger)BM;
+ (BOOL)oUsenextframeforimagecapturebm:(NSInteger)BM;
+ (BOOL)nNewcgimagefromcurrentlyprocessedoutputbm:(NSInteger)BM;
+ (BOOL)eSizeoffbobm:(NSInteger)BM;
+ (BOOL)WTexturecoordinatesforrotationbm:(NSInteger)BM;
+ (BOOL)ORendertotexturewithverticestexturecoordinatesbm:(NSInteger)BM;
+ (BOOL)qInformtargetsaboutnewframeattimebm:(NSInteger)BM;
+ (BOOL)yOutputframesizebm:(NSInteger)BM;
+ (BOOL)ZSetbackgroundcolorredgreenbluealphabm:(NSInteger)BM;
+ (BOOL)cSetintegerforuniformnamebm:(NSInteger)BM;
+ (BOOL)qSetfloatforuniformnamebm:(NSInteger)BM;
+ (BOOL)dSetsizeforuniformnamebm:(NSInteger)BM;
+ (BOOL)zSetpointforuniformnamebm:(NSInteger)BM;
+ (BOOL)GSetfloatvec3Foruniformnamebm:(NSInteger)BM;
+ (BOOL)mSetfloatvec4Foruniformbm:(NSInteger)BM;
+ (BOOL)XSetfloatarraylengthforuniformbm:(NSInteger)BM;
+ (BOOL)hSetmatrix3Fforuniformprogrambm:(NSInteger)BM;
+ (BOOL)wSetmatrix4Fforuniformprogrambm:(NSInteger)BM;
+ (BOOL)uSetfloatforuniformprogrambm:(NSInteger)BM;
+ (BOOL)bSetpointforuniformprogrambm:(NSInteger)BM;
+ (BOOL)tSetsizeforuniformprogrambm:(NSInteger)BM;
+ (BOOL)jSetvec3Foruniformprogrambm:(NSInteger)BM;
+ (BOOL)RSetvec4Foruniformprogrambm:(NSInteger)BM;
+ (BOOL)ESetfloatarraylengthforuniformprogrambm:(NSInteger)BM;
+ (BOOL)FSetintegerforuniformprogrambm:(NSInteger)BM;
+ (BOOL)pSetandexecuteuniformstatecallbackatindexforprogramtoblockbm:(NSInteger)BM;
+ (BOOL)SSetuniformsforprogramatindexbm:(NSInteger)BM;
+ (BOOL)jNewframereadyattimeatindexbm:(NSInteger)BM;
+ (BOOL)nNextavailabletextureindexbm:(NSInteger)BM;
+ (BOOL)USetinputframebufferatindexbm:(NSInteger)BM;
+ (BOOL)dRotatedsizeforindexbm:(NSInteger)BM;
+ (BOOL)rRotatedpointforrotationbm:(NSInteger)BM;
+ (BOOL)wSetinputsizeatindexbm:(NSInteger)BM;
+ (BOOL)TSetinputrotationatindexbm:(NSInteger)BM;
+ (BOOL)kForceprocessingatsizebm:(NSInteger)BM;
+ (BOOL)OForceprocessingatsizerespectingaspectratiobm:(NSInteger)BM;
+ (BOOL)WMaximumoutputsizebm:(NSInteger)BM;
+ (BOOL)BEndprocessingbm:(NSInteger)BM;
+ (BOOL)mWantsmonochromeinputbm:(NSInteger)BM;

@end
